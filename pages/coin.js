import Head from "next/head";
import Navbar from "../components/Navbar";
import { useState } from "react";
import Footer from "../components/Footer";
import Catson from '../images/catson.png';

// Sidebar Components
import TokenStats from "../components/TokenStats";
import ActionsCard from "../components/ActionCard";
import LinksCard from "../components/LinkCard"; 

import { Box, Grid, Typography, IconButton, Tooltip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';
import ContentCopyIcon from '@mui/icons-material/ContentCopy'; // For copy icon
import Image from 'next/image'; // For handling images/icons

export default function Home() {
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);
  const tokenAddress = "0xcA8e8d244f0d219a6Fc9e4793C635cEA98d0399C";

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const handleCopyAddress = () => {
    navigator.clipboard.writeText(tokenAddress);
    alert("Token address copied!");
  };

  // Sample transaction data with profit and loss details
  const transactions = [
    { time: "11:57:18", volume: "$543.59", cat: "1,450,727.52", price: "$0.00037", profit: true, txId: "0xc3ac...4ac" },
    { time: "09:05:35", volume: "$3.31", cat: "8,681.03", price: "$0.00038", profit: false, txId: "0x75f0...7a5" },
    { time: "08:45:23", volume: "$38.08", cat: "99,741.98", price: "$0.00038", profit: false, txId: "0x53d5...eb6" },
    { time: "06:43:29", volume: "$21.61", cat: "56,492.09", price: "$0.00038", profit: true, txId: "0x12f4...405" },
    { time: "06:34:27", volume: "$82.67", cat: "215,235.71", price: "$0.00038", profit: true, txId: "0x0a2b...ca9" },
    { time: "05:57:37", volume: "$215.08", cat: "565,298.18", price: "$0.00038", profit: true, txId: "0x5a03...c86" },
    { time: "03:35:07", volume: "$5.61", cat: "14,929.64", price: "$0.00038", profit: false, txId: "0xb68a...198" }
  ];

  return (
    <>
      <Head>
        <title>CoinBoom</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {/* Navbar */}
        <Navbar isSidebarOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />
        
        <div className="min-h-screen bg-gray-800 py-16 text-white">
        <div className=" mx-auto pt-16 pb-8 px-4">
            
            <Grid container spacing={4}>
              {/* Left Sidebar / Main Chart Section */}
              <Grid item xs={12} md={8}>
                <Box className="p-4 rounded-lg shadow-lg">
                  
                  {/* Coin Header Section */}
                  <Box className="flex items-center mb-4">
                    {/* Coin Icon */}
                    <Box className="mr-2">
                      <Image 
                        src={Catson} // Update this with the correct path to the coin icon
                        alt="Coin Icon"
                        width={70}
                        height={70}
                        className="rounded-[50%] "
                      />
                    </Box>
                    {/* Coin Name and Contract */}
                    <Box>
                      <Typography variant="h4" gutterBottom>
                        Catson (CAT) {/* Coin name and symbol */}
                      </Typography>
                      <Box className="flex items-center">
                        <Typography variant="body1" className="mr-2">
                          {tokenAddress} {/* Token contract address */}
                        </Typography>
                        <Tooltip title="Copy Address">
                          <IconButton onClick={handleCopyAddress} color="primary">
                            <ContentCopyIcon />
                          </IconButton>
                        </Tooltip>
                      </Box>
                    </Box>
                  </Box>

                  {/* DexScreener Chart */}
                 

                  {/* Transaction Table */}
                 
                </Box>
              </Grid>

              {/* Right Sidebar */}
              <Grid item xs={12} md={4}>
                <ActionsCard />
                {/* <TokenStats /> */}
                {/* <LinksCard /> */}
              </Grid>
            </Grid>
          </div>
        
        <Box className="bg-gray-900 min-h-screen p-4 rounded-lg w-full">
                    <iframe
                      src="https://dexscreener.com/base/0xCCa1c5F774B79de7eFe9C20D0Eb6cbF29Ac57155?embed=1&theme=dark"
                      width="100%"
                      
                      style={{ border: "none", borderRadius: "8px" ,minHeight: "150vh"}}
                      allow="clipboard-write"
                      allowFullScreen
                    ></iframe>
                  </Box>
        </div>

        <div
          className={`transition-all duration-300 ${
            isSidebarOpen ? "ml-64" : "ml-0"
          }`}
        >
          <Footer />
        </div>
      </main>
    </>
  );
}
